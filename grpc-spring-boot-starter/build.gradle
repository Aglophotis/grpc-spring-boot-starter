apply plugin: 'com.bmuschko.nexus'
apply plugin: "de.marcphilipp.nexus-publish"


//apply from: "${rootDir}/publish.gradle"

nexusPublishing {
    stagingProfileId = rootProject.nexusStaging.stagingProfileId
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact (javadocJar) {
                classifier = 'javadoc'
            }
            artifact (sourcesJar) {
                classifier = 'sources'
            }
        }
    }
}

signing {
    required {
        // signing is required if this is a release version and the artifacts are to be published
        !version.toString().endsWith('-SNAPSHOT') && tasks.withType(PublishToMavenRepository).find {
            gradle.taskGraph.hasTask it
        }
    }
    sign publishing.publications
}
buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBoot_1_X_Version}")
    }
}

dependencies {
    compile "io.grpc:grpc-netty:${grpcVersion}"
    compile "io.grpc:grpc-services:${grpcVersion}"
    compile (group: 'org.springframework.boot', name: 'spring-boot-starter', version: springBoot_1_X_Version )
   
    compileOnly("org.springframework.boot:spring-boot-configuration-processor:${springBoot_1_X_Version}")
   
}
compileJava.dependsOn(processResources)
modifyPom {
    project {
        name 'grpc-spring-boot-starter'
        description 'grpc-spring-boot-starter'
        url 'https://github.com/LogNet/grpc-spring-boot-starter'

        scm {
            url 'https://github.com/LogNet/grpc-spring-boot-starter'
            connection 'scm:https://LogNet@github.com/LogNet/grpc-spring-boot-starter.git'
            developerConnection 'scm:git://github.com/LogNet/grpc-spring-boot-starter.git'
        }

        licenses {
            license {
                name 'The Apache Software License, Version 2.0'
                url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                distribution 'repo'
            }
        }

        developers {
            developer {
                id 'jvmlet'
                name 'Furer Alexander'
                email 'furer.alexander@gmail.com'
            }
        }
    }
}